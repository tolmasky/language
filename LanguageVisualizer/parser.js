
var Parser = { };

(function(global, exports, module)
{
var compiledGrammar = {"table":[[0,"source",1],[0,"start",2],[4,3,4,3],[0,"_",5],[8,6],[6,7],[0,"SourceElements",8],[3,9,10,11],[4,12,13],[0,"WhiteSpace",14],[0,"LineTerminator",15],[0,"Comment",16],[0,"SourceElement",17],[6,18],[2,"[\\u0009\\u000B\\u000C\\u0020\\u00A0\\uFEFF\\u1680\\u180E\\u2000-\\u200A\\u202F\\u205F\\u3000]"],[2,"[\\u000A\\u000D\\u2028\\u2029]"],[3,19,20],[3,21,22],[4,3,12],[0,"MultiLineComment",23],[0,"SingleLineComment",24],[0,"Statement",25],[0,"FunctionDeclaration",26],[4,27,28,29],[4,30,31],[3,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],[4,49,3,50,3,51,3,52,3,53,3,54,3,55,3,56],[5,"/*"],[6,57],[5,"*/"],[5,"//"],[6,58],[0,"Block",59],[0,"VariableStatement",60],[0,"EmptyStatement",61],[0,"ExpressionStatement",62],[0,"IfStatement",63],[0,"IterationStatement",64],[0,"ContinueStatement",65],[0,"BreakStatement",66],[0,"ReturnStatement",67],[0,"WithStatement",68],[0,"LabelledStatement",69],[0,"SwitchStatement",70],[0,"ThrowStatement",71],[0,"TryStatement",72],[0,"DebuggerStatement",73],[0,"ImportStatement",74],[0,"ClassDeclarationStatement",75],[0,"FUNCTION",76],[0,"Identifier",77],[5,"("],[8,78],[5,")"],[5,"{"],[0,"FunctionBody",2],[5,"}"],[4,79,80],[0,"SingleLineCommentChar",81],[4,54,3,82,3,56],[4,83,3,84,85,86],[5,";"],[4,87,88,86],[4,89,3,51,3,88,3,53,3,21,90],[3,91,92,93,94,95],[4,96,97,98],[4,99,97,98],[4,100,97,101],[4,102,3,51,3,88,3,53,3,21],[4,50,3,103,3,21],[4,104,3,51,3,88,3,53,3,105],[4,106,97,101],[4,107,3,32,3,108],[4,109,86],[4,110,3,111,86],[4,112,3,50,3,113,3,114,3,115,3,116,86],[4,117,118],[4,119,120],[0,"FormalParameterList",121],[9,29],[1],[4,122,80],[8,123],[0,"VAR",124],[0,"VariableDeclaration",125],[6,126],[0,"EOS",127],[9,128],[0,"Expression",129],[0,"IF",130],[8,131],[0,"DoWhileStatement",132],[0,"WhileStatement",133],[0,"ForStatement",134],[0,"ForInStatement",135],[0,"EachStatement",136],[0,"CONTINUE",137],[0,"__",138],[3,139,140],[0,"BREAK",141],[0,"RETURN",142],[3,140,143],[0,"WITH",144],[5,":"],[0,"SWITCH",145],[0,"CaseBlock",146],[0,"THROW",147],[0,"TRY",148],[3,149,150],[0,"DEBUGGER",151],[5,"@import"],[3,152,153],[5,"@implementation"],[8,154],[8,155],[0,"ClassBody",156],[5,"@end"],[5,"function"],[9,157],[9,158],[0,"IdentifierName",159],[4,50,160],[9,10],[0,"StatementList",161],[4,162,118],[4,50,163],[4,3,164,3,84],[3,165,166,167,168],[3,54,49],[4,169,170],[4,171,118],[4,3,172,3,21],[4,173,3,21,3,174,3,51,3,88,3,53,86],[4,174,3,51,3,88,3,53,3,21],[4,175,3,51,3,176,3,61,3,177,3,61,3,177,3,53,3,21],[4,175,3,51,3,178,3,179,3,88,3,53,3,21],[4,180,3,51,3,178,3,179,3,88,3,53,3,21],[4,181,118],[6,182],[4,50,86],[0,"SemicolonInsertionEOS",183],[4,184,118],[4,185,118],[4,88,86],[4,186,118],[4,187,118],[4,54,3,188,3,189,3,188,3,56],[4,190,118],[4,191,118],[4,192,193],[0,"Finally",194],[4,195,118],[0,"LocalFilePath",196],[0,"StandardFilePath",197],[3,198,199],[4,54,200,3,56],[8,201],[0,"IdentifierPart",202],[4,203,118],[4,204,205],[6,206],[4,21,207],[5,"var"],[8,208],[5,","],[4,3,61],[4,97,209],[4,97,210],[4,97,211],[0,"AssignmentExpression",212],[6,213],[5,"if"],[0,"ELSE",214],[0,"DO",215],[0,"WHILE",216],[0,"FOR",217],[8,218],[8,88],[0,"ForInFirstExpression",219],[0,"IN",220],[5,"@each"],[5,"continue"],[3,9,221,20],[3,222,166,167,168],[5,"break"],[5,"return"],[5,"with"],[5,"switch"],[8,223],[8,224],[5,"throw"],[5,"try"],[0,"Catch",225],[8,226],[4,227,3,32],[5,"debugger"],[0,"StringLiteral",228],[4,229,3,230,3,231],[0,"SuperclassDeclaration",232],[0,"CategoryDeclaration",233],[6,234],[0,"ClassElements",235],[3,204,236,237,238,239,240],[0,"ReservedWord",241],[0,"IdentifierStart",242],[6,157],[4,3,164,3,50],[6,243],[4,3,244,245,3,169],[0,"LineTerminatorSequence",246],[10,56],[0,"EOF",247],[3,248,249],[4,3,164,3,169],[4,250,118],[4,251,118],[4,252,118],[4,253,118],[0,"ForFirstExpression",254],[3,255,256],[4,257,118],[0,"SingleLineMultiLineComment",258],[4,97,61],[0,"CaseClauses",259],[0,"DefaultClause",260],[4,261,3,51,3,50,3,53,3,32],[4,3,150],[0,"FINALLY",262],[3,263,264],[5,"<"],[6,265],[5,">"],[4,103,3,50],[4,51,3,50,3,53],[4,3,266],[4,267,268],[0,"UnicodeCombiningMark",269],[0,"UnicodeDigit",270],[0,"UnicodeConnectorPunctuation",271],[0,"ZWNJ",272],[0,"ZWJ",273],[3,274,275,276,277],[3,278,279,280],[4,3,21],[5,"="],[9,244],[3,281,282,283,284,285],[9,80],[4,255,3,286,3,169],[0,"ConditionalExpression",287],[5,"else"],[5,"do"],[5,"while"],[5,"for"],[3,288,289],[0,"LeftHandSideExpression",290],[4,83,3,291],[5,"in"],[4,27,292,29],[4,293,294],[4,295,3,103,296],[0,"CATCH",297],[4,298,118],[4,299,300,301,300],[4,302,303,302],[3,304,305],[0,"CompoundIvarDeclaration",306],[0,"ClassElement",307],[6,308],[3,309,310,311,312,313,314],[3,315,316,317,318],[2,"[\\u005F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F]"],[5,"\u200C"],[5,"\u200D"],[0,"Keyword",319],[0,"FutureReservedWord",320],[0,"NullLiteral",321],[0,"BooleanLiteral",322],[0,"UnicodeLetter",323],[2,"[$_]"],[4,324,325],[5,"\n"],[4,285,326],[5,"\u2028"],[5,"\u2029"],[5,"\r"],[0,"AssignmentOperator",327],[4,328,329],[0,"ExpressionNoIn",330],[4,83,3,331],[3,332,333],[0,"VariableDeclarationNoIn",334],[6,335],[0,"CaseClause",336],[6,337],[0,"DEFAULT",338],[8,339],[4,340,118],[5,"finally"],[8,341],[5,"\""],[6,342],[5,"'"],[6,343],[5,"\\>"],[4,344,80],[4,345,3,346,347,86],[3,348,349,21,22],[4,3,267],[2,"[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0900-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1DC0-\\u1DE6\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F\\uA67C\\uA67D\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u094F\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A19-\\u1A1B\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC]"],[4,350,351],[4,352,353],[4,354,355],[4,356,357],[4,358,359],[2,"[\\u0030-\\u0039\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]"],[4,360,361],[4,354,362],[4,363,364],[3,184,365,340,181,195,366,367,251,250,298,253,117,171,368,257,369,185,187,370,190,191,371,162,372,252,186],[3,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402],[0,"NULL",403],[3,404,405],[3,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423],[5,"\\"],[0,"UnicodeEscapeSequence",424],[8,281],[3,425,426,427,428,429,430,431,432,433,434,435,436],[0,"LogicalOrExpression",437],[8,438],[4,439,440],[0,"VariableDeclarationListNoIn",441],[0,"CallExpression",442],[0,"NewExpression",443],[4,50,444],[4,79,122,80],[4,445,3,88,3,103,296],[4,3,293],[4,366,118],[4,3,123],[5,"catch"],[4,446,3],[0,"DoubleStringCharacter",447],[0,"SingleStringCharacter",448],[9,231],[0,"IvarType",449],[0,"IvarDeclaration",450],[6,451],[0,"ClassMethodDeclaration",452],[0,"InstanceMethodDeclaration",453],[5,"\uDB40"],[2,"[\\uDD00-\\uDDEF]"],[5,"\uD834"],[2,"[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44\\uDD65\\uDD66\\uDD6D-\\uDD72]"],[5,"\uD804"],[2,"[\\uDC01\\uDC38-\\uDC46\\uDC80\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDC00\\uDC02\\uDC82\\uDCB0-\\uDCB2\\uDCB7\\uDCB8]"],[5,"\uD800"],[2,"[\\uDDFD]"],[5,"\uD802"],[2,"[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F]"],[5,"\uD835"],[2,"[\\uDFCE-\\uDFFF]"],[2,"[\\uDC66-\\uDC6F]"],[5,"\uD801"],[2,"[\\uDCA0-\\uDCA9]"],[5,"case"],[5,"default"],[5,"delete"],[5,"instanceof"],[5,"new"],[5,"this"],[5,"typeof"],[5,"void"],[5,"abstract"],[5,"boolean"],[5,"byte"],[5,"char"],[5,"class"],[5,"const"],[5,"double"],[5,"enum"],[5,"export"],[5,"extends"],[5,"final"],[5,"float"],[5,"goto"],[5,"implements"],[5,"import"],[5,"interface"],[5,"int"],[5,"long"],[5,"native"],[5,"package"],[5,"private"],[5,"protected"],[5,"public"],[5,"short"],[5,"static"],[5,"super"],[5,"synchronized"],[5,"throws"],[5,"transient"],[5,"volatile"],[4,454,118],[0,"TRUE",455],[0,"FALSE",456],[2,"[\\u0041-\\u005A\\u00C0-\\u00D6\\u00D8-\\u00DE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10A0-\\u10C5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uFF21-\\uFF3A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00DF-\\u00F6\\u00F8-\\u00FF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1D00-\\u1D2B\\u1D62-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7C\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2D00-\\u2D25\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7FA\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D61\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA717-\\uA71F\\uA770\\uA788\\uA9CF\\uAA70\\uAADD\\uFF70\\uFF9E\\uFF9F\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u1100-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BC0-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u2135-\\u2138\\u2D30-\\u2D65\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FCB\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA2D\\uFA30-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF]"],[4,457,458],[4,459,460],[4,461,462],[4,463,464],[4,360,465],[4,354,466],[4,356,467],[4,468,469],[4,363,470],[4,471,472],[4,473,474],[4,475,476],[4,477,478],[4,479,480],[4,481,482],[4,358,483],[4,484,485],[4,486,487,487,487,487],[4,244,245],[5,"*="],[5,"/="],[5,"%="],[5,"+="],[5,"-="],[5,"<<="],[5,">>="],[5,">>>="],[5,"&="],[5,"^="],[5,"|="],[4,488,489],[4,3,490,3,169,3,103,3,169],[0,"AssignmentExpressionNoIn",491],[6,492],[4,291,493],[4,494,3,495,496],[3,494,497],[8,498],[0,"CASE",499],[5,"@"],[3,500,501,502],[3,503,501,502],[4,504,505],[4,50,3,506],[4,3,164,3,346],[4,507,508,3,509,3,510,3,54,3,55,3,56],[4,511,508,3,509,3,510,3,54,3,55,3,56],[5,"null"],[4,512,118],[4,513,118],[5,"\uD82C"],[2,"[\\uDC00\\uDC01]"],[5,"\uD808"],[2,"[\\uDC00-\\uDF6E]"],[5,"\uD869"],[2,"[\\uDED6\\uDF00]"],[5,"\uD809"],[2,"[\\uDC00-\\uDC62]"],[2,"[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]"],[2,"[\\uDC03-\\uDC37\\uDC83-\\uDCAF]"],[2,"[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1E\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]"],[5,"\uD80C"],[2,"[\\uDC00-\\uDFFF]"],[2,"[\\uDC00-\\uDC9D]"],[5,"\uD86E"],[2,"[\\uDC1D]"],[5,"\uD803"],[2,"[\\uDC00-\\uDC48]"],[5,"\uD840"],[2,"[\\uDC00]"],[5,"\uD87E"],[2,"[\\uDC00-\\uDE1D]"],[5,"\uD86D"],[2,"[\\uDF34\\uDF40]"],[5,"\uD81A"],[2,"[\\uDC00-\\uDE38]"],[2,"[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72]"],[5,"\uD80D"],[2,"[\\uDC00-\\uDC2E]"],[5,"u"],[0,"HexDigit",514],[0,"LogicalAndExpression",515],[6,516],[5,"?"],[3,517,518],[4,3,164,3,439],[6,519],[0,"MemberExpression",520],[0,"Arguments",521],[6,522],[4,523,3,333],[4,3,244,245,3,439],[4,365,118],[4,524,80],[4,324,525],[0,"LineContinuation",526],[4,527,80],[0,"IvarTypeElement",528],[6,529],[8,530],[5,"+"],[8,531],[0,"MethodSelector",532],[8,61],[5,"-"],[5,"true"],[5,"false"],[2,"[0-9a-fA-F]"],[4,533,534],[4,3,535,3,488],[4,255,3,286,3,439],[0,"ConditionalExpressionNoIn",536],[4,3,164,3,291],[4,537,538],[4,51,3,539,3,53],[4,3,540],[0,"NEW",541],[9,542],[0,"EscapeSequence",543],[4,324,209],[9,544],[4,545,546],[4,3,504],[0,"Accessors",547],[4,3,548],[3,549,550],[0,"BitwiseOrExpression",551],[6,552],[5,"||"],[4,553,554],[3,555,556,557,558],[6,559],[8,560],[3,495,561,562],[4,369,118],[3,563,324,10],[3,564,565,566,325],[3,567,324,10],[9,568],[3,120,569],[4,570,571],[0,"MethodType",572],[4,573,574],[0,"UnarySelector",575],[4,576,577],[4,3,578,3,533],[0,"LogicalOrExpressionNoIn",579],[8,580],[0,"PrimaryExpression",581],[0,"FunctionExpression",582],[0,"MessageExpression",583],[4,523,3,494,3,495],[4,3,584],[0,"ArgumentList",585],[0,"BracketedAccessor",586],[0,"DotAccessor",587],[2,"[\"]"],[0,"CharacterEscapeSequence",588],[4,589,590],[0,"HexEscapeSequence",591],[2,"[']"],[4,546,3,592],[5,"@outlet"],[5,"@accessors"],[8,593],[4,51,3,594,595,3,53],[0,"KeywordSelector",596],[8,597],[0,"Selector",120],[0,"BitwiseXOrExpression",598],[6,599],[5,"&&"],[4,600,601],[4,3,490,3,439,3,103,3,439],[3,602,50,603,604,605,606],[4,49,3,607,3,51,3,52,3,53,3,54,3,55,3,56],[4,608,3,609,3,610,3,611],[3,561,562],[4,169,3,612],[4,608,3,88,3,611],[4,613,3,120],[3,614,615],[5,"0"],[9,616],[4,617,487,487],[3,530,86,164],[4,51,618,53],[3,619,120],[6,620],[4,621,622],[4,3,164,3,623],[4,624,625],[4,3,626,245,3,576],[0,"LogicalAndExpressionNoIn",627],[6,628],[0,"THIS",629],[0,"Literal",630],[0,"ArrayLiteral",631],[0,"ObjectLiteral",632],[4,51,3,88,3,53],[8,50],[5,"["],[3,633,88],[0,"SelectorCall",634],[5,"]"],[6,635],[5,"."],[0,"SingleEscapeCharacter",636],[0,"NonEscapeCharacter",637],[0,"DecimalDigit",638],[5,"x"],[8,639],[0,"ACTION",640],[4,3,594],[0,"KeywordDeclarator",641],[6,642],[5,"..."],[0,"BitwiseAndExpression",643],[6,644],[5,"|"],[4,645,646],[4,3,535,3,600],[4,370,118],[3,276,277,647,196,648,649],[4,608,3,650,3,611],[4,54,3,651,3,56],[0,"SUPER",652],[3,653,550],[4,164,3,169],[2,"['\"\\\\bfnrtv]"],[4,122,654,80],[2,"[0-9]"],[4,655,656],[3,657,658],[4,659,103,508,3,50],[4,3,621],[4,660,661],[4,3,662,245,3,624],[0,"BitwiseOrExpressionNoIn",663],[6,664],[0,"NumericLiteral",665],[0,"RegularExpressionLiteral",666],[0,"SelectorLiteral",667],[0,"ElementList",668],[8,669],[4,398,118],[4,670,671],[9,672],[0,"AccessorsConfiguration",673],[6,674],[4,675,118],[4,676,118],[8,677],[0,"EqualityExpression",678],[6,679],[5,"^"],[4,680,681],[4,3,578,3,645],[4,682,683],[4,684,685,684,686],[4,687,3,51,3,688,3,53],[4,689,690,3,691],[4,692,3,693],[0,"KeywordSelectorCall",694],[6,695],[0,"EscapeCharacter",696],[3,697,698,699,700],[4,3,164,3,655],[5,"@action"],[5,"IBAction"],[4,575,3],[4,701,702],[4,3,703,245,3,660],[0,"BitwiseXOrExpressionNoIn",704],[6,705],[3,706,707],[9,204],[5,"/"],[0,"RegularExpressionBody",708],[0,"RegularExpressionFlags",205],[5,"@selector"],[0,"SelectorLiteralContents",709],[6,710],[6,711],[8,169],[0,"PropertyNameAndValueList",712],[8,164],[4,713,714],[4,3,164,3,88],[3,614,616,617,486],[0,"IvarPropertyName",715],[0,"IvarGetterName",716],[0,"IvarSetterName",717],[5,"readonly"],[0,"RelationalExpression",718],[6,719],[5,"&"],[4,720,721],[4,3,626,245,3,680],[0,"DecimalLiteral",722],[0,"HexIntegerLiteral",723],[4,724,725],[3,726,50],[4,164,3],[4,3,169,727],[4,728,729],[0,"KeywordCall",730],[6,731],[4,732,3,244,3,50],[4,733,3,244,3,50],[4,734,3,244,3,50,735],[4,736,737],[4,3,738,3,701],[0,"BitwiseAndExpressionNoIn",739],[6,740],[4,741,742],[4,589,743,744],[0,"RegularExpressionFirstChar",745],[6,746],[7,747],[7,748],[0,"PropertyAssignment",749],[6,750],[4,751,3,103,3,88],[4,3,713],[5,"property"],[5,"getter"],[5,"setter"],[8,752],[0,"ShiftExpression",753],[6,754],[0,"EqualityOperator",755],[4,756,757],[4,3,662,245,3,720],[3,758,759,760],[8,761],[2,"[Xx]"],[7,487],[3,762,763,764],[0,"RegularExpressionChar",765],[4,751,3,103,3],[4,3,164],[3,766,767,768],[4,3,164,3,728],[8,575],[4,3,103],[4,769,770],[4,3,771,3,736],[3,772,773,774,775],[0,"EqualityExpressionNoIn",776],[6,777],[4,760,613,778],[4,613,779],[0,"DecimalIntegerLiteral",780],[0,"ExponentPart",781],[4,782,783],[0,"RegularExpressionBackslashSequence",784],[0,"RegularExpressionClass",785],[3,786,763,764],[4,787,3,103,3,169],[0,"PropertyGetter",788],[0,"PropertySetter",789],[0,"AdditiveExpression",790],[6,791],[0,"RelationalOperator",792],[5,"==="],[5,"!=="],[5,"=="],[5,"!="],[4,793,794],[4,3,703,245,3,756],[6,616],[7,616],[3,589,795],[4,796,797],[9,798],[0,"RegularExpressionNonTerminator",81],[4,324,783],[4,608,799,611],[4,800,783],[0,"PropertyName",801],[4,802,3,787,3,51,3,53,3,54,3,55,3,56],[4,803,3,787,3,51,3,804,3,53,3,54,3,55,3,56],[4,805,806],[4,3,807,3,769],[3,808,809,229,231,810,179],[0,"RelationalExpressionNoIn",811],[6,812],[4,813,778],[2,"[eE]"],[0,"SignedInteger",814],[2,"[*\\u005C/[]"],[6,815],[9,816],[3,120,196,647],[5,"get"],[5,"set"],[0,"PropertySetParameterList",50],[0,"MultiplicativeExpression",817],[6,818],[0,"ShiftOperator",819],[5,"<="],[5,">="],[0,"INSTANCEOF",820],[4,736,821],[4,3,738,3,793],[2,"[1-9]"],[4,822,779],[0,"RegularExpressionClassChar",823],[2,"[\\u005C/[]"],[4,824,825],[4,3,826,3,805],[3,827,828,829],[4,368,118],[6,830],[8,831],[3,832,763],[0,"UnaryExpression",833],[6,834],[0,"AdditiveOperator",835],[5,"<<"],[5,">>"],[5,">>>"],[4,3,836,3,736],[2,"[+-]"],[4,837,783],[3,838,839,840,841,842,843,844,845,846,847],[4,3,848,3,824],[4,849,245],[0,"RelationalOperatorNoIn",850],[9,851],[0,"PostfixExpression",852],[4,853,3,824],[4,854,3,824],[4,855,3,824],[4,856,3,824],[4,857,3,824],[4,507,3,824],[4,511,3,824],[4,858,3,824],[4,859,3,824],[0,"MultiplicativeOperator",860],[3,861,862],[3,808,809,229,231,810],[2,"[\\u005C\\]]"],[4,255,863],[0,"DELETE",864],[0,"VOID",865],[0,"TYPEOF",866],[5,"++"],[5,"--"],[5,"~"],[5,"!"],[4,867,245],[4,507,868],[4,511,869],[8,870],[4,367,118],[4,372,118],[4,371,118],[3,871,684,872],[9,507],[9,511],[4,97,873],[5,"*"],[5,"%"],[3,856,857],[0,"%start",875],[4,876,877,876],[0,"%_",878],[8,879],[6,880],[0,"%SourceElements",881],[3,882,883,884],[4,885,886],[0,"%WhiteSpace",14],[0,"%LineTerminator",15],[0,"%Comment",887],[0,"%SourceElement",888],[6,889],[3,890,891],[3,892,893],[4,876,885],[0,"%MultiLineComment",23],[0,"%SingleLineComment",894],[0,"%Statement",895],[0,"%FunctionDeclaration",896],[4,30,897],[3,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914],[4,915,876,916,876,51,876,917,876,53,876,54,876,918,876,56],[6,919],[0,"%Block",920],[0,"%VariableStatement",921],[0,"%EmptyStatement",61],[0,"%ExpressionStatement",922],[0,"%IfStatement",923],[0,"%IterationStatement",924],[0,"%ContinueStatement",925],[0,"%BreakStatement",926],[0,"%ReturnStatement",927],[0,"%WithStatement",928],[0,"%LabelledStatement",929],[0,"%SwitchStatement",930],[0,"%ThrowStatement",931],[0,"%TryStatement",932],[0,"%DebuggerStatement",933],[0,"%ImportStatement",934],[0,"%ClassDeclarationStatement",935],[0,"%FUNCTION",936],[0,"%Identifier",937],[8,938],[0,"%FunctionBody",875],[0,"%SingleLineCommentChar",939],[12,940,941],[4,942,876,943,944,945],[4,946,947,945],[4,948,876,51,876,947,876,53,876,892,949],[3,950,951,952,953,954],[4,955,956,957],[4,958,956,957],[4,959,956,960],[4,961,876,51,876,947,876,53,876,892],[4,916,876,103,876,892],[4,962,876,51,876,947,876,53,876,963],[4,964,956,960],[4,965,876,898,876,966],[4,967,945],[4,110,876,968,945],[4,112,876,916,876,969,876,970,876,971,876,116,945],[4,117,972],[12,973,974],[0,"%FormalParameterList",975],[4,976,80],[4,54,876,977,876,56],[11,"%BadBlock",978,"Missing ending brace"],[0,"%VAR",979],[0,"%VariableDeclaration",980],[6,981],[0,"%EOS",982],[9,983],[0,"%Expression",984],[0,"%IF",985],[8,986],[0,"%DoWhileStatement",987],[0,"%WhileStatement",988],[0,"%ForStatement",989],[0,"%ForInStatement",990],[0,"%EachStatement",991],[0,"%CONTINUE",992],[0,"%__",993],[3,994,995],[0,"%BREAK",996],[0,"%RETURN",997],[3,995,998],[0,"%WITH",999],[0,"%SWITCH",1000],[0,"%CaseBlock",1001],[0,"%THROW",1002],[0,"%TRY",1003],[3,1004,1005],[0,"%DEBUGGER",1006],[3,1007,1008],[8,1009],[8,1010],[0,"%ClassBody",1011],[9,1012],[4,1013,1014],[0,"%BadIdentifier",1015],[4,916,1016],[9,883],[8,1017],[4,54,876,977,876],[4,162,972],[4,916,1018],[4,876,164,876,943],[3,1019,1020,1021,1022],[3,54,915],[4,1023,1024],[4,171,972],[4,876,1025,876,892],[4,1026,876,892,876,1027,876,51,876,947,876,53,945],[4,1027,876,51,876,947,876,53,876,892],[4,1028,876,51,876,1029,876,61,876,1030,876,61,876,1030,876,53,876,892],[4,1028,876,51,876,1031,876,1032,876,947,876,53,876,892],[4,180,876,51,876,1031,876,1032,876,947,876,53,876,892],[4,181,972],[6,1033],[4,916,945],[0,"%SemicolonInsertionEOS",1034],[4,184,972],[4,185,972],[4,947,945],[4,186,972],[4,187,972],[4,54,876,1035,876,1036,876,1035,876,56],[4,190,972],[4,191,972],[4,1037,1038],[0,"%Finally",1039],[4,195,972],[0,"%LocalFilePath",1040],[0,"%StandardFilePath",1041],[3,1042,1043],[4,54,1044,876,56],[8,1045],[0,"%IdentifierPart",1046],[9,1047],[0,"%IdentifierName",1048],[3,1049,1050],[6,1051],[0,"%StatementList",1052],[8,1053],[4,876,61],[4,956,1054],[4,956,210],[4,956,1055],[0,"%AssignmentExpression",1056],[6,1057],[0,"%ELSE",1058],[0,"%DO",1059],[0,"%WHILE",1060],[0,"%FOR",1061],[8,1062],[8,947],[0,"%ForInFirstExpression",1063],[0,"%IN",1064],[3,882,1065,891],[3,1066,1020,1021,1022],[8,1067],[8,1068],[0,"%Catch",1069],[8,1070],[4,1071,876,898],[0,"%StringLiteral",1072],[4,229,876,230,876,231],[0,"%SuperclassDeclaration",1073],[0,"%CategoryDeclaration",1074],[6,1075],[0,"%ClassElements",1076],[3,1077,1078,1079,1080,1081,1082],[4,1083,972],[4,1077,1084],[11,"%ReservedWordIdentifier",1047,"Identifier cannot be a reserved word"],[11,"%DigitIdentifier",1085,"Identifier cannot start with a digit"],[4,876,164,876,916],[4,892,1086],[4,876,244,245,876,1023],[0,"%LineTerminatorSequence",246],[0,"%EOF",247],[3,1087,1088],[4,876,164,876,1023],[4,250,972],[4,251,972],[4,252,972],[4,253,972],[0,"%ForFirstExpression",1089],[3,1090,1091],[4,257,972],[0,"%SingleLineMultiLineComment",1092],[4,956,61],[0,"%CaseClauses",1093],[0,"%DefaultClause",1094],[4,1095,876,51,876,916,876,53,876,898],[4,876,1005],[0,"%FINALLY",1096],[3,1097,1098],[4,103,876,916],[4,51,876,916,876,53],[4,876,1099],[4,1100,1101],[0,"%IdentifierStart",1102],[0,"%UnicodeCombiningMark",269],[0,"%UnicodeDigit",270],[0,"%UnicodeConnectorPunctuation",271],[0,"%ZWNJ",272],[0,"%ZWJ",273],[0,"%ReservedWord",1103],[6,1012],[4,1079,1104],[6,1105],[4,1090,876,1106,876,1023],[0,"%ConditionalExpression",1107],[3,1108,1109],[0,"%LeftHandSideExpression",1110],[4,942,876,1111],[4,27,1112,29],[4,1113,1114],[4,1115,876,103,1116],[0,"%CATCH",1117],[4,298,972],[4,1118,300,1119,300],[4,302,1120,302],[0,"%CompoundIvarDeclaration",1121],[0,"%ClassElement",1122],[6,1123],[3,1124,279,1125],[3,1126,1127,1128,1129],[7,1012],[4,876,892],[0,"%AssignmentOperator",327],[4,1130,1131],[0,"%ExpressionNoIn",1132],[4,942,876,1133],[3,1134,1135],[0,"%VariableDeclarationNoIn",1136],[6,1137],[0,"%CaseClause",1138],[6,1139],[0,"%DEFAULT",1140],[8,1141],[4,340,972],[8,1142],[6,1143],[6,1144],[4,1145,876,1146,1147,945],[3,1148,1149,892,893],[4,876,1100],[0,"%UnicodeLetter",323],[4,324,1150],[0,"%Keyword",319],[0,"%FutureReservedWord",320],[0,"%NullLiteral",1151],[0,"%BooleanLiteral",1152],[0,"%LogicalOrExpression",1153],[8,1154],[4,1155,1156],[0,"%VariableDeclarationListNoIn",1157],[0,"%CallExpression",1158],[0,"%NewExpression",1159],[4,916,1160],[4,79,976,80],[4,1161,876,947,876,103,1116],[4,876,1113],[4,366,972],[4,876,1017],[4,446,876],[0,"%DoubleStringCharacter",1162],[0,"%SingleStringCharacter",1163],[0,"%IvarType",1164],[0,"%IvarDeclaration",1165],[6,1166],[0,"%ClassMethodDeclaration",1167],[0,"%InstanceMethodDeclaration",1168],[0,"%UnicodeEscapeSequence",1169],[0,"%NULL",1170],[3,1171,1172],[4,1173,1174],[4,876,490,876,1023,876,103,876,1023],[0,"%AssignmentExpressionNoIn",1175],[6,1176],[4,1111,1177],[4,1178,876,1179,1180],[3,1178,1181],[8,1182],[0,"%CASE",1183],[3,1184,1185,1186],[3,1187,1185,1186],[4,1188,1189],[4,916,876,1190],[4,876,164,876,1146],[4,507,1191,876,1192,876,510,876,54,876,918,876,56],[4,511,1191,876,1192,876,510,876,54,876,918,876,56],[4,486,1193,1193,1193,1193],[4,454,972],[0,"%TRUE",1194],[0,"%FALSE",1195],[0,"%LogicalAndExpression",1196],[6,1197],[3,1198,1199],[4,876,164,876,1155],[6,1200],[0,"%MemberExpression",1201],[0,"%Arguments",1202],[6,1203],[4,1204,876,1135],[4,876,244,245,876,1155],[4,365,972],[4,1205,80],[4,324,1206],[0,"%LineContinuation",1207],[4,1208,80],[0,"%IvarTypeElement",1209],[6,1210],[8,1211],[8,1212],[0,"%MethodSelector",1213],[0,"%HexDigit",514],[4,512,972],[4,513,972],[4,1214,1215],[4,876,535,876,1173],[4,1090,876,1106,876,1155],[0,"%ConditionalExpressionNoIn",1216],[4,876,164,876,1111],[4,1217,1218],[4,51,876,1219,876,53],[4,876,1220],[0,"%NEW",1221],[9,1222],[0,"%EscapeSequence",1223],[4,324,1054],[9,1224],[4,1225,1226],[4,876,1188],[0,"%Accessors",1227],[4,876,1228],[3,1229,1230],[0,"%BitwiseOrExpression",1231],[6,1232],[4,1233,1234],[3,1235,1236,1237,1238],[6,1239],[8,1240],[3,1179,1241,1242],[4,369,972],[3,563,324,883],[3,1243,1244,1245,1150],[3,567,324,883],[9,1246],[3,1014,569],[4,570,1247],[0,"%MethodType",1248],[4,1249,1250],[0,"%UnarySelector",1251],[4,1252,1253],[4,876,578,876,1214],[0,"%LogicalOrExpressionNoIn",1254],[8,1255],[0,"%PrimaryExpression",1256],[0,"%FunctionExpression",1257],[0,"%MessageExpression",1258],[4,1204,876,1178,876,1179],[4,876,1259],[0,"%ArgumentList",1260],[0,"%BracketedAccessor",1261],[0,"%DotAccessor",1262],[0,"%CharacterEscapeSequence",1263],[4,589,1264],[0,"%HexEscapeSequence",1265],[4,1226,876,1266],[8,1267],[4,51,876,1268,1269,876,53],[0,"%KeywordSelector",1270],[8,1271],[0,"%Selector",1014],[0,"%BitwiseXOrExpression",1272],[6,1273],[4,1274,1275],[4,876,490,876,1155,876,103,876,1155],[3,1276,916,1277,1278,1279,1280],[4,915,876,1281,876,51,876,917,876,53,876,54,876,918,876,56],[4,608,876,1282,876,1283,876,611],[3,1241,1242],[4,1023,876,1284],[4,608,876,947,876,611],[4,613,876,1014],[3,1285,1286],[9,1287],[4,617,1193,1193],[3,1211,945,164],[4,51,1288,53],[3,1289,1014],[6,1290],[4,1291,1292],[4,876,164,876,623],[4,1293,1294],[4,876,626,245,876,1252],[0,"%LogicalAndExpressionNoIn",1295],[6,1296],[0,"%THIS",1297],[0,"%Literal",1298],[0,"%ArrayLiteral",1299],[0,"%ObjectLiteral",1300],[4,51,876,947,876,53],[8,916],[3,1301,947],[0,"%SelectorCall",1302],[6,1303],[0,"%SingleEscapeCharacter",636],[0,"%NonEscapeCharacter",1304],[0,"%DecimalDigit",638],[8,1305],[0,"%ACTION",1306],[4,876,1268],[0,"%KeywordDeclarator",1307],[6,1308],[0,"%BitwiseAndExpression",1309],[6,1310],[4,1311,1312],[4,876,535,876,1274],[4,370,972],[3,1128,1129,1313,1040,1314,1315],[4,608,876,1316,876,611],[4,54,876,1317,876,56],[0,"%SUPER",1318],[3,1319,1230],[4,164,876,1023],[4,976,1320,80],[4,1321,1322],[3,1323,1324],[4,1325,103,1191,876,916],[4,876,1291],[4,1326,1327],[4,876,662,245,876,1293],[0,"%BitwiseOrExpressionNoIn",1328],[6,1329],[0,"%NumericLiteral",1330],[0,"%RegularExpressionLiteral",1331],[0,"%SelectorLiteral",1332],[0,"%ElementList",1333],[8,1334],[4,398,972],[4,1335,1336],[9,1337],[0,"%AccessorsConfiguration",1338],[6,1339],[4,675,972],[4,676,972],[8,1340],[0,"%EqualityExpression",1341],[6,1342],[4,1343,1344],[4,876,578,876,1311],[4,1345,1346],[4,684,1347,684,1348],[4,687,876,51,876,1349,876,53],[4,1350,1351,876,1352],[4,1353,876,693],[0,"%KeywordSelectorCall",1354],[6,1355],[0,"%EscapeCharacter",1356],[3,1357,1358,1359,700],[4,876,164,876,1321],[4,1251,876],[4,1360,1361],[4,876,703,245,876,1326],[0,"%BitwiseXOrExpressionNoIn",1362],[6,1363],[3,1364,1365],[9,1077],[0,"%RegularExpressionBody",1366],[0,"%RegularExpressionFlags",1084],[0,"%SelectorLiteralContents",1367],[6,1368],[6,1369],[8,1023],[0,"%PropertyNameAndValueList",1370],[4,1371,1372],[4,876,164,876,947],[3,1285,1287,617,486],[0,"%IvarPropertyName",1373],[0,"%IvarGetterName",1374],[0,"%IvarSetterName",1375],[0,"%RelationalExpression",1376],[6,1377],[4,1378,1379],[4,876,626,245,876,1343],[0,"%DecimalLiteral",1380],[0,"%HexIntegerLiteral",1381],[4,1382,1383],[3,1384,916],[4,164,876],[4,876,1023,1385],[4,1386,1387],[0,"%KeywordCall",1388],[6,1389],[4,732,876,244,876,916],[4,733,876,244,876,916],[4,734,876,244,876,916,1390],[4,1391,1392],[4,876,1393,876,1360],[0,"%BitwiseAndExpressionNoIn",1394],[6,1395],[4,1396,1397],[4,589,743,1398],[0,"%RegularExpressionFirstChar",1399],[6,1400],[7,1401],[7,1402],[0,"%PropertyAssignment",1403],[6,1404],[4,1405,876,103,876,947],[4,876,1371],[8,1406],[0,"%ShiftExpression",1407],[6,1408],[0,"%EqualityOperator",755],[4,1409,1410],[4,876,662,245,876,1378],[3,1411,1412,1413],[8,1414],[7,1193],[3,1415,1416,1417],[0,"%RegularExpressionChar",1418],[4,1405,876,103,876],[4,876,164],[3,1419,1420,1421],[4,876,164,876,1386],[8,1251],[4,876,103],[4,1422,1423],[4,876,1424,876,1391],[0,"%EqualityExpressionNoIn",1425],[6,1426],[4,1413,613,1427],[4,613,1428],[0,"%DecimalIntegerLiteral",1429],[0,"%ExponentPart",1430],[4,782,1431],[0,"%RegularExpressionBackslashSequence",1432],[0,"%RegularExpressionClass",1433],[3,1434,1416,1417],[4,1435,876,103,876,1023],[0,"%PropertyGetter",1436],[0,"%PropertySetter",1437],[0,"%AdditiveExpression",1438],[6,1439],[0,"%RelationalOperator",1440],[4,1441,1442],[4,876,703,245,876,1409],[6,1287],[7,1287],[3,589,1443],[4,796,1444],[0,"%RegularExpressionNonTerminator",939],[4,324,1431],[4,608,1445,611],[4,800,1431],[0,"%PropertyName",1446],[4,802,876,1435,876,51,876,53,876,54,876,918,876,56],[4,803,876,1435,876,51,876,1447,876,53,876,54,876,918,876,56],[4,1448,1449],[4,876,1450,876,1422],[3,808,809,229,231,1451,1032],[0,"%RelationalExpressionNoIn",1452],[6,1453],[4,813,1427],[0,"%SignedInteger",1454],[6,1455],[3,1014,1040,1313],[0,"%PropertySetParameterList",916],[0,"%MultiplicativeExpression",1456],[6,1457],[0,"%ShiftOperator",819],[0,"%INSTANCEOF",1458],[4,1391,1459],[4,876,1393,876,1441],[4,822,1428],[0,"%RegularExpressionClassChar",1460],[4,1461,1462],[4,876,1463,876,1448],[4,368,972],[6,1464],[3,1465,1416],[0,"%UnaryExpression",1466],[6,1467],[0,"%AdditiveOperator",835],[4,876,1468,876,1391],[4,837,1431],[3,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478],[4,876,1479,876,1461],[0,"%RelationalOperatorNoIn",1480],[0,"%PostfixExpression",1481],[4,1482,876,1461],[4,1483,876,1461],[4,1484,876,1461],[4,856,876,1461],[4,857,876,1461],[4,507,876,1461],[4,511,876,1461],[4,858,876,1461],[4,859,876,1461],[0,"%MultiplicativeOperator",860],[3,808,809,229,231,1451],[4,1090,1485],[0,"%DELETE",1486],[0,"%VOID",1487],[0,"%TYPEOF",1488],[8,1489],[4,367,972],[4,372,972],[4,371,972],[4,956,873]],"nameToUID":{"start":1,"_":3,"SourceElements":6,"WhiteSpace":9,"LineTerminator":10,"Comment":11,"SourceElement":12,"MultiLineComment":19,"SingleLineComment":20,"Statement":21,"FunctionDeclaration":22,"Block":32,"VariableStatement":33,"EmptyStatement":34,"ExpressionStatement":35,"IfStatement":36,"IterationStatement":37,"ContinueStatement":38,"BreakStatement":39,"ReturnStatement":40,"WithStatement":41,"LabelledStatement":42,"SwitchStatement":43,"ThrowStatement":44,"TryStatement":45,"DebuggerStatement":46,"ImportStatement":47,"ClassDeclarationStatement":48,"FUNCTION":49,"Identifier":50,"FunctionBody":55,"SingleLineCommentChar":58,"FormalParameterList":78,"VAR":83,"VariableDeclaration":84,"EOS":86,"Expression":88,"IF":89,"DoWhileStatement":91,"WhileStatement":92,"ForStatement":93,"ForInStatement":94,"EachStatement":95,"CONTINUE":96,"__":97,"BREAK":99,"RETURN":100,"WITH":102,"SWITCH":104,"CaseBlock":105,"THROW":106,"TRY":107,"DEBUGGER":109,"ClassBody":115,"IdentifierName":120,"StatementList":123,"SemicolonInsertionEOS":140,"Finally":150,"LocalFilePath":152,"StandardFilePath":153,"IdentifierPart":157,"AssignmentExpression":169,"ELSE":172,"DO":173,"WHILE":174,"FOR":175,"ForInFirstExpression":178,"IN":179,"Catch":192,"StringLiteral":196,"SuperclassDeclaration":198,"CategoryDeclaration":199,"ClassElements":201,"ReservedWord":203,"IdentifierStart":204,"LineTerminatorSequence":209,"EOF":211,"ForFirstExpression":218,"SingleLineMultiLineComment":221,"CaseClauses":223,"DefaultClause":224,"FINALLY":227,"UnicodeCombiningMark":236,"UnicodeDigit":237,"UnicodeConnectorPunctuation":238,"ZWNJ":239,"ZWJ":240,"ConditionalExpression":249,"LeftHandSideExpression":255,"CATCH":261,"CompoundIvarDeclaration":266,"ClassElement":267,"Keyword":274,"FutureReservedWord":275,"NullLiteral":276,"BooleanLiteral":277,"UnicodeLetter":278,"AssignmentOperator":286,"ExpressionNoIn":288,"VariableDeclarationNoIn":291,"CaseClause":293,"DEFAULT":295,"NULL":321,"UnicodeEscapeSequence":325,"LogicalOrExpression":328,"VariableDeclarationListNoIn":331,"CallExpression":332,"NewExpression":333,"DoubleStringCharacter":342,"SingleStringCharacter":343,"IvarType":345,"IvarDeclaration":346,"ClassMethodDeclaration":348,"InstanceMethodDeclaration":349,"TRUE":404,"FALSE":405,"AssignmentExpressionNoIn":439,"CASE":445,"HexDigit":487,"LogicalAndExpression":488,"MemberExpression":494,"Arguments":495,"LineContinuation":502,"IvarTypeElement":504,"MethodSelector":509,"ConditionalExpressionNoIn":518,"NEW":523,"EscapeSequence":525,"Accessors":530,"BitwiseOrExpression":533,"MethodType":548,"UnarySelector":550,"LogicalOrExpressionNoIn":553,"PrimaryExpression":555,"FunctionExpression":556,"MessageExpression":557,"ArgumentList":560,"BracketedAccessor":561,"DotAccessor":562,"CharacterEscapeSequence":564,"HexEscapeSequence":566,"KeywordSelector":573,"Selector":575,"BitwiseXOrExpression":576,"LogicalAndExpressionNoIn":600,"THIS":602,"Literal":603,"ArrayLiteral":604,"ObjectLiteral":605,"SelectorCall":610,"SingleEscapeCharacter":614,"NonEscapeCharacter":615,"DecimalDigit":616,"ACTION":619,"KeywordDeclarator":621,"BitwiseAndExpression":624,"SUPER":633,"BitwiseOrExpressionNoIn":645,"NumericLiteral":647,"RegularExpressionLiteral":648,"SelectorLiteral":649,"ElementList":650,"AccessorsConfiguration":655,"EqualityExpression":660,"KeywordSelectorCall":670,"EscapeCharacter":672,"BitwiseXOrExpressionNoIn":680,"RegularExpressionBody":685,"RegularExpressionFlags":686,"SelectorLiteralContents":688,"PropertyNameAndValueList":692,"IvarPropertyName":697,"IvarGetterName":698,"IvarSetterName":699,"RelationalExpression":701,"DecimalLiteral":706,"HexIntegerLiteral":707,"KeywordCall":713,"BitwiseAndExpressionNoIn":720,"RegularExpressionFirstChar":724,"PropertyAssignment":728,"ShiftExpression":736,"EqualityOperator":738,"RegularExpressionChar":746,"EqualityExpressionNoIn":756,"DecimalIntegerLiteral":760,"ExponentPart":761,"RegularExpressionBackslashSequence":763,"RegularExpressionClass":764,"PropertyGetter":767,"PropertySetter":768,"AdditiveExpression":769,"RelationalOperator":771,"RegularExpressionNonTerminator":783,"PropertyName":787,"RelationalExpressionNoIn":793,"SignedInteger":797,"PropertySetParameterList":804,"MultiplicativeExpression":805,"ShiftOperator":807,"INSTANCEOF":810,"RegularExpressionClassChar":815,"UnaryExpression":824,"AdditiveOperator":826,"RelationalOperatorNoIn":836,"PostfixExpression":838,"MultiplicativeOperator":848,"DELETE":853,"VOID":854,"TYPEOF":855,"%start":874,"%_":876,"%SourceElements":879,"%WhiteSpace":882,"%LineTerminator":883,"%Comment":884,"%SourceElement":885,"%MultiLineComment":890,"%SingleLineComment":891,"%Statement":892,"%FunctionDeclaration":893,"%Block":898,"%VariableStatement":899,"%EmptyStatement":900,"%ExpressionStatement":901,"%IfStatement":902,"%IterationStatement":903,"%ContinueStatement":904,"%BreakStatement":905,"%ReturnStatement":906,"%WithStatement":907,"%LabelledStatement":908,"%SwitchStatement":909,"%ThrowStatement":910,"%TryStatement":911,"%DebuggerStatement":912,"%ImportStatement":913,"%ClassDeclarationStatement":914,"%FUNCTION":915,"%Identifier":916,"%FunctionBody":918,"%SingleLineCommentChar":919,"%FormalParameterList":938,"%BadBlock":941,"%VAR":942,"%VariableDeclaration":943,"%EOS":945,"%Expression":947,"%IF":948,"%DoWhileStatement":950,"%WhileStatement":951,"%ForStatement":952,"%ForInStatement":953,"%EachStatement":954,"%CONTINUE":955,"%__":956,"%BREAK":958,"%RETURN":959,"%WITH":961,"%SWITCH":962,"%CaseBlock":963,"%THROW":964,"%TRY":965,"%DEBUGGER":967,"%ClassBody":971,"%BadIdentifier":974,"%SemicolonInsertionEOS":995,"%Finally":1005,"%LocalFilePath":1007,"%StandardFilePath":1008,"%IdentifierPart":1012,"%IdentifierName":1014,"%StatementList":1017,"%AssignmentExpression":1023,"%ELSE":1025,"%DO":1026,"%WHILE":1027,"%FOR":1028,"%ForInFirstExpression":1031,"%IN":1032,"%Catch":1037,"%StringLiteral":1040,"%SuperclassDeclaration":1042,"%CategoryDeclaration":1043,"%ClassElements":1045,"%ReservedWordIdentifier":1049,"%DigitIdentifier":1050,"%LineTerminatorSequence":1054,"%EOF":1055,"%ForFirstExpression":1062,"%SingleLineMultiLineComment":1065,"%CaseClauses":1067,"%DefaultClause":1068,"%FINALLY":1071,"%IdentifierStart":1077,"%UnicodeCombiningMark":1078,"%UnicodeDigit":1079,"%UnicodeConnectorPunctuation":1080,"%ZWNJ":1081,"%ZWJ":1082,"%ReservedWord":1083,"%ConditionalExpression":1088,"%LeftHandSideExpression":1090,"%CATCH":1095,"%CompoundIvarDeclaration":1099,"%ClassElement":1100,"%AssignmentOperator":1106,"%ExpressionNoIn":1108,"%VariableDeclarationNoIn":1111,"%CaseClause":1113,"%DEFAULT":1115,"%UnicodeLetter":1124,"%Keyword":1126,"%FutureReservedWord":1127,"%NullLiteral":1128,"%BooleanLiteral":1129,"%LogicalOrExpression":1130,"%VariableDeclarationListNoIn":1133,"%CallExpression":1134,"%NewExpression":1135,"%DoubleStringCharacter":1143,"%SingleStringCharacter":1144,"%IvarType":1145,"%IvarDeclaration":1146,"%ClassMethodDeclaration":1148,"%InstanceMethodDeclaration":1149,"%UnicodeEscapeSequence":1150,"%NULL":1151,"%AssignmentExpressionNoIn":1155,"%CASE":1161,"%TRUE":1171,"%FALSE":1172,"%LogicalAndExpression":1173,"%MemberExpression":1178,"%Arguments":1179,"%LineContinuation":1186,"%IvarTypeElement":1188,"%MethodSelector":1192,"%HexDigit":1193,"%ConditionalExpressionNoIn":1199,"%NEW":1204,"%EscapeSequence":1206,"%Accessors":1211,"%BitwiseOrExpression":1214,"%MethodType":1228,"%UnarySelector":1230,"%LogicalOrExpressionNoIn":1233,"%PrimaryExpression":1235,"%FunctionExpression":1236,"%MessageExpression":1237,"%ArgumentList":1240,"%BracketedAccessor":1241,"%DotAccessor":1242,"%CharacterEscapeSequence":1243,"%HexEscapeSequence":1245,"%KeywordSelector":1249,"%Selector":1251,"%BitwiseXOrExpression":1252,"%LogicalAndExpressionNoIn":1274,"%THIS":1276,"%Literal":1277,"%ArrayLiteral":1278,"%ObjectLiteral":1279,"%SelectorCall":1283,"%SingleEscapeCharacter":1285,"%NonEscapeCharacter":1286,"%DecimalDigit":1287,"%ACTION":1289,"%KeywordDeclarator":1291,"%BitwiseAndExpression":1293,"%SUPER":1301,"%BitwiseOrExpressionNoIn":1311,"%NumericLiteral":1313,"%RegularExpressionLiteral":1314,"%SelectorLiteral":1315,"%ElementList":1316,"%AccessorsConfiguration":1321,"%EqualityExpression":1326,"%KeywordSelectorCall":1335,"%EscapeCharacter":1337,"%BitwiseXOrExpressionNoIn":1343,"%RegularExpressionBody":1347,"%RegularExpressionFlags":1348,"%SelectorLiteralContents":1349,"%PropertyNameAndValueList":1353,"%IvarPropertyName":1357,"%IvarGetterName":1358,"%IvarSetterName":1359,"%RelationalExpression":1360,"%DecimalLiteral":1364,"%HexIntegerLiteral":1365,"%KeywordCall":1371,"%BitwiseAndExpressionNoIn":1378,"%RegularExpressionFirstChar":1382,"%PropertyAssignment":1386,"%ShiftExpression":1391,"%EqualityOperator":1393,"%RegularExpressionChar":1400,"%EqualityExpressionNoIn":1409,"%DecimalIntegerLiteral":1413,"%ExponentPart":1414,"%RegularExpressionBackslashSequence":1416,"%RegularExpressionClass":1417,"%PropertyGetter":1420,"%PropertySetter":1421,"%AdditiveExpression":1422,"%RelationalOperator":1424,"%RegularExpressionNonTerminator":1431,"%PropertyName":1435,"%RelationalExpressionNoIn":1441,"%SignedInteger":1444,"%PropertySetParameterList":1447,"%MultiplicativeExpression":1448,"%ShiftOperator":1450,"%INSTANCEOF":1451,"%RegularExpressionClassChar":1455,"%UnaryExpression":1461,"%AdditiveOperator":1463,"%RelationalOperatorNoIn":1468,"%PostfixExpression":1469,"%MultiplicativeOperator":1479,"%DELETE":1482,"%VOID":1483,"%TYPEOF":1484}};


function Parser(/*String | CompiledGrammar*/ aGrammar)
{
    if (typeof aGrammar.valueOf() === "string")
        this.compiledGrammar = new (require("./compiledgrammar"))(aGrammar);
    else
        this.compiledGrammar = aGrammar;

    return this;
}

module.exports = Parser;

Parser.prototype.parse = function(input)
{
    return parse(this.compiledGrammar, input);
}

var NAME                = 0,
    DOT                 = 1,
    CHARACTER_CLASS     = 2,
    ORDERED_CHOICE      = 3,
    SEQUENCE            = 4,
    STRING_LITERAL      = 5,
    ZERO_OR_MORE        = 6,
    ONE_OR_MORE         = 7,
    OPTIONAL            = 8,
    NEGATIVE_LOOK_AHEAD = 9,
    POSITIVE_LOOK_AHEAD = 10,
    ERROR_NAME          = 11,
    ERROR_CHOICE        = 12;

function parse(aCompiledGrammar, input, name)
{
    var node = new SyntaxNode("#document", input, 0, 0),
        table = aCompiledGrammar.table,
        nameToUID = aCompiledGrammar.nameToUID;

    name = name || "start";

    // This is a stupid check.
    if (aCompiledGrammar.nameToUID["EOF"] !== undefined)
        table[0] = [SEQUENCE, nameToUID[name], nameToUID["EOF"]];

    if (!evaluate(new context(input, table), node, table, 0))
    {
        // This is a stupid check.
        if (aCompiledGrammar.nameToUID["EOF"] !== undefined)
            table[0] = [SEQUENCE, nameToUID["%" + name], nameToUID["EOF"]];

        node.children.length = 0;

        evaluate(new context(input, table), node, table, 0);

        node.traverse(
        {
            traverseTextNodes:false,
            enteredNode:function(node)
            {
                if (node.error)
                    console.log(node.message() + "\n");
            }
        });
    }

    return node;
}

exports.parse = parse;

function context(input, table)
{
    this.position = 0;
    this.input = input;
    this.memos = [];
    for (var i=0;i<table.length;++i)
        this.memos[i] = [];
}

function evaluate(context, parent, rules, rule_id)
{
    var rule = rules[rule_id],
        type = rule[0],
        input_length = context.input.length,
        memos = context.memos[rule_id];

    var uid = context.position,
        entry = memos[uid];

    if (entry === false)
        return false;
    else if (entry === true)
        return true;
    else if (entry)
    {
        if (parent)
            parent.children.push(entry.node);
        context.position = entry.position;
        return true;
    }

    switch (type)
    {
        case NAME:
        case ERROR_NAME:
            var node = new SyntaxNode(rule[1], context.input, context.position, 0, rule[3]);
            if (!evaluate(context, node, rules, rule[2]))
            {
                memos[uid] = false;
                return false;
            }
            node.range.length = context.position - node.range.location;
            memos[uid] = { node:node, position:context.position };

            if (parent)
                parent.children.push(node);
            return true;

        case CHARACTER_CLASS:
            var character = context.input.charAt(context.position);

            if (typeof rule[1] !== "function")
            {
                rule[1] = new RegExp(rule[1]);
                rule[1].global = true;
            }

            if (character.match(rule[1]))
            {
                if (parent)
                    parent.children.push(character);
                ++context.position;
                return true;
            }
            memos[uid] = false;
            return false;

        case SEQUENCE:
            var index = 1,
                count = rule.length;

            for (; index < count; ++index)
                if (!evaluate(context, parent, rules, rule[index]))
                {
                    memos[uid] = false;
                    return false;
                }

            return true;

        case ORDERED_CHOICE:
        case ERROR_CHOICE:
            var index = 1,
                count = rule.length,
                position = context.position;

            for (; index < count; ++index)
            {
                // cache opportunity here.
                var child_count = parent && parent.children.length;

                if (evaluate(context, parent, rules, rule[index]))
                    return true;

                if (parent)
                    parent.children.length = child_count;
                context.position = position;
            }
            memos[uid] = false;
            return false;

        case STRING_LITERAL:
            var string = rule[1],
                string_length = string.length;

            if (string_length + context.position > input_length)
            {
                memos[uid] = false;
                return false;
            }

            var index = 0;

            for (; index < string_length; ++context.position, ++index)
                if (context.input.charAt(context.position) !== string.charAt(index))
                {
                    context.position -= index;
                    memos[uid] = false;
                    return false;
                }

//            memos[uid] = string;
            if (parent)
                parent.children.push(string);

            return true;
        case DOT:
            if (context.position < input_length)
            {
                if (parent)
                    parent.children.push(context.input.charAt(context.position));
                ++context.position;
                return true;
            }
            memos[uid] = false;
            return false;
        case POSITIVE_LOOK_AHEAD:
        case NEGATIVE_LOOK_AHEAD:
            var position = context.position,
                result = evaluate(context, null, rules, rule[1]) === (type === POSITIVE_LOOK_AHEAD);
            context.position = position;
            memos[uid] = result;

            return result;

        case ZERO_OR_MORE:
            var child,
                position = context.position,
                childCount = parent && parent.children.length;

            while (evaluate(context, parent, rules, rule[1]))
            {
                position = context.position,
                childCount = parent && parent.children.length;
            }

            context.position = position;
            if (parent)
                parent.children.length = childCount;

            return true;

        case ONE_OR_MORE:
            var position = context.position,
                childCount = parent && parent.children.length;
            if (!evaluate(context, parent, rules, rule[1]))
            {
                memos[uid] = false;
                context.position = position;
                if (parent)
                    parent.children.length = childCount;
                return false;
            }
            position = context.position,
            childCount = parent && parent.children.length;
            while (evaluate(context, parent, rules, rule[1]))
            {
                position = context.position;
                childCount = parent && parent.children.length;
            }
            context.position = position;
            if (parent)
                parent.children.length = childCount;
            return true;

        case OPTIONAL:
            var position = context.position,
                childCount = parent && parent.children.length;

            if (!evaluate(context, parent, rules, rule[1]))
            {
                context.position = position;

                if (parent)
                    parent.children.length = childCount;
            }

            return true;
    }
}

function SyntaxNode(/*String*/ aName, /*String*/ aSource, /*Number*/ aLocation, /*Number*/ aLength, /*String*/anErrorMessage)
{
    this.name = aName;
    this.source = aSource;
    this.range = { location:aLocation, length:aLength };
    this.children = [];

    if (anErrorMessage)
        this.error = anErrorMessage;
}

SyntaxNode.prototype.message = function()
{
    var source = this.source,
        lineNumber = 1,
        index = 0,
        start = 0,
        length = source.length,
        range = this.range;

    for (; index < range.location; ++index)
        if (source.charAt(index) === '\n')
        {
            ++lineNumber;
            start = index + 1;
        }

    for (; index < length; ++index)
        if (source.charAt(index) === '\n')
            break;

    var line = source.substring(start, index);
        message = line + "\n";

    message += (new Array(this.range.location - start + 1)).join(" ");
    message += (new Array(Math.min(range.length, line.length) + 1)).join("^") + "\n";
    message += "ERROR line " + lineNumber + ": " + this.error;

    return message;
}

SyntaxNode.prototype.toString = function(/*String*/ spaces)
{
    if (!spaces)
        spaces = "";

    var string = spaces + this.name +  " <" + this.innerText() + "> ",
        children = this.children,
        index = 0,
        count = children.length;

    for (; index < count; ++index)
    {
        var child = children[index];

        if (typeof child === "string")
            string += "\n" + spaces + "\t" + child;

        else
            string += "\n" + children[index].toString(spaces + '\t');
    }

    return string;
}

SyntaxNode.prototype.innerText = function()
{
    var range = this.range;

    return this.source.substr(range.location, range.length);
}

SyntaxNode.prototype.traverse = function(walker)
{
    if (!walker.enteredNode || walker.enteredNode(this) !== false)
    {
        var children = this.children,
            index = 0,
            count = children && children.length;

        for (; index < count; ++index)
        {
            var child = children[index];

            if (typeof child !== "string")
                child.traverse(walker);

            else if (walker.traversesTextNodes)
            {
                walker.enteredNode(child);
                walker.exitedNode(child);
            }
        }
    }

    if (walker.exitedNode)
        walker.exitedNode(this);
}


exports.Parser = new Parser(compiledGrammar);
})(window, Parser, { exports: Parser });

